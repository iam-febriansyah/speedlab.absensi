///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ReturnLoginDataUser {
/*
{
  "user_id": "EB8BA43C-7973-4A44-A1E6-9F1D9BE180DA",
  "username": "satrio@gmail.com",
  "email": "satrio@gmail.com",
  "staff_id": "51416313",
  "nik": "2121",
  "first_name": "Satrio",
  "last_name": "Bagaskoro",
  "phone": "081245670987",
  "address": " Bekasi",
  "birth_place": "Probolinggo",
  "birth_day": "1998-07-15",
  "position": "Manager",
  "section": "Analis Laboratorium",
  "division": "Sales & Marketing",
  "facedata": "[-0.02403358556330204,0.0036282602231949568,-0.004161129239946604,-0.002368563087657094,-0.014876452274620533,-0.06108018755912781,-0.01802119053900242,0.059425413608551025,-0.030595242977142334,0.05616569146513939,0.006144833751022816,0.0027758392971009016,-0.013125465251505375,-0.004375455901026726,-0.002218205016106367,-0.06311166286468506,0.005418590269982815,0.009549912996590137,0.004518312402069569,-0.006907584611326456,0.01073051244020462,0.07151579111814499,-0.015805276110768318,-0.005351405590772629,-0.15605907142162323,0.02389991655945778,0.0003776821249630302,0.034232303500175476,0.10756202042102814,-0.16154277324676514,0.0113296490162611,-0.034412723034620285,0.03999245539307594,-0.006042812950909138,0.07977959513664246,-0.03979165107011795,0.17836637794971466,-0.02659226395189762,0.005951655097305775,-0.18338848650455475,-0.0006953198462724686,0.0012888457858934999,-0.008950832299888134,0.0036574287805706263,0.011711862869560719,0.0029646398033946753,-0.022752510383725166,0.09563396126031876,-0.009414024651050568,0.01765141822397709,-0.019255423918366432,0.0019450557883828878,-0.10849826782941818,0.0011686990037560463,0.010800463147461414,0.007836433127522469,0.11832533776760101,0.0007653855718672276,-0.020158981904387474,0.0016530165448784828,0.039623260498046875,0.026740148663520813,0.03141893446445465,-0.09540094435214996,0.01101697701960802,0.20571410655975342,-0.000601034436840564,-0.0360979288816452,0.001139687024988234,-0.0035934941843152046,-0.003691790159791708,-0.1413719356060028,0.2037360519170761,-0.016367914155125618,-0.14205415546894073,0.02317865379154682,-0.001811199588701129,-0.004098554607480764,0.14991013705730438,-0.1712116003036499,0.0032295333221554756,-0.04624592885375023,-0.013803535141050816,-0.02027677558362484,-0.08772127330303192,0.003141761524602771,0.00999212171882391,0.0865948423743248,0.011698988266289234,-0.03670459985733032,-0.22667443752288818,0.003481493331491947,-0.0007640659459866583,0.011013572104275227,-0.1440960317850113,-0.08136604726314545,-0.04010441154241562,0.13661649823188782,0.0020079377572983503,-0.021575039252638817,0.0017894180491566658,0.004333076532930136,0.0017602306324988604,-6.792516069253907e-5,0.008088857866823673,0.004329955670982599,0.11980412900447845,-0.000352535949787125,0.033319972455501556,-0.007039932068437338,0.17775878310203552,0.0022228036541491747,-0.005469472613185644,-0.09568691998720169,0.004825872834771872,-0.16420190036296844,-0.0013071474386379123,-0.005438197869807482,0.3509249687194824,-0.06550546735525131,0.14270193874835968,-0.011497915722429752,-0.13581056892871857,0.000460761075373739,-0.001999364234507084,0.0035284487530589104,0.0032238734420388937,0.0033642430789768696,0.012377776205539703,-0.041975054889917374,0.00545157678425312,0.0008940637926571071,-0.005048074293881655,0.028372114524245262,0.056231096386909485,-0.007099532056599855,-0.13749977946281433,-0.031046859920024872,-0.022460604086518288,0.012890162877738476,-0.004630157258361578,-0.006064740475267172,0.00039528246270492673,0.005047536455094814,-0.04816163331270218,0.050068777054548264,-0.0030359711963683367,0.003421412082388997,-0.002781160408630967,-0.00886901468038559,0.00856225285679102,0.05340589955449104,0.21798942983150482,-0.004159784875810146,0.00450035510584712,0.002501637442037463,0.000846861454192549,0.009017156437039375,0.06490053981542587,-0.0013689358020201325,-0.01874753087759018,0.01288530696183443,-0.005265859887003899,-0.005074098706245422,0.000862124259583652,0.015550508163869381,0.009047147817909718,0.096401646733284,0.004045155365020037,0.011961743235588074,-0.07843878865242004,0.010297305881977081,0.004365753382444382,0.004763389006257057,-0.019130291417241096,-0.009869473986327648,0.059312544763088226,-0.035854313522577286,-0.002689634682610631,-0.005722153000533581,-0.2157241553068161,0.03616595268249512,0.005101507529616356,0.0013332574162632227,-0.16532428562641144,0.04257436841726303,0.085258349776268,0.10094606876373291,0.03244807571172714,-0.19002708792686462,-0.017088839784264565,0.0009691558661870658]",
  "latitude": "-6.2295601",
  "longitude": "106.9973988",
  "radius": "100",
  "face_ios": false,
  "face_android": true,
  "date": "20210921152722"
} 
*/

  String? userId;
  String? username;
  String? email;
  String? staffId;
  String? nik;
  String? firstName;
  String? lastName;
  String? phone;
  String? address;
  String? birthPlace;
  String? birthDay;
  String? position;
  String? section;
  String? section_id;
  String? foto;

  String? division;
  String? facedata;
  String? latitude;
  String? longitude;
  String? radius;
  bool? faceIos;
  bool? faceAndroid;
  String? date;

  ReturnLoginDataUser({
    this.userId,
    this.username,
    this.email,
    this.staffId,
    this.nik,
    this.firstName,
    this.lastName,
    this.phone,
    this.address,
    this.birthPlace,
    this.birthDay,
    this.position,
    this.section,
    this.section_id,
    this.division,
    this.facedata,
    this.latitude,
    this.longitude,
    this.radius,
    this.faceIos,
    this.faceAndroid,
    this.date,
    this.foto,
  });
  ReturnLoginDataUser.fromJson(Map<String, dynamic> json) {
    userId = json["user_id"]?.toString();
    username = json["username"]?.toString();
    email = json["email"]?.toString();
    staffId = json["staff_id"]?.toString();
    nik = json["nik"]?.toString();
    firstName = json["first_name"]?.toString();
    lastName = json["last_name"]?.toString();
    phone = json["phone"]?.toString();
    address = json["address"]?.toString();
    birthPlace = json["birth_place"]?.toString();
    birthDay = json["birth_day"]?.toString();
    position = json["position"]?.toString();
    section = json["section"]?.toString();
    section_id = json["section_id"]?.toString();

    division = json["division"]?.toString();
    facedata = json["facedata"]?.toString();
    latitude = json["latitude"]?.toString();
    longitude = json["longitude"]?.toString();
    radius = json["radius"]?.toString();
    faceIos = json["face_ios"];
    faceAndroid = json["face_android"];
    radius = json["radius"]?.toString();
    foto = json["foto"]?.toString();
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["user_id"] = userId;
    data["username"] = username;
    data["email"] = email;
    data["staff_id"] = staffId;
    data["nik"] = nik;
    data["first_name"] = firstName;
    data["last_name"] = lastName;
    data["phone"] = phone;
    data["address"] = address;
    data["birth_place"] = birthPlace;
    data["birth_day"] = birthDay;
    data["position"] = position;
    data["section"] = section;
    data["section_id"] = section_id;

    data["division"] = division;
    data["facedata"] = facedata;
    data["latitude"] = latitude;
    data["longitude"] = longitude;
    data["radius"] = radius;
    data["face_ios"] = faceIos;
    data["face_android"] = faceAndroid;
    data["date"] = date;
    data["foto"] = foto;
    return data;
  }
}

class ReturnLogin {
/*
{
  "status_json": true,
  "remarks": "Successfully Login Into System",
  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiRUI4QkE0M0MtNzk3My00QTQ0LUExRTYtOUYxRDlCRTE4MERBIn0.0xdNcfvjwZM3PBOhXvE3mzTOyY0fZEnWR-rI1PQGxHI",
  "data_user": {
    "user_id": "EB8BA43C-7973-4A44-A1E6-9F1D9BE180DA",
    "username": "satrio@gmail.com",
    "email": "satrio@gmail.com",
    "staff_id": "51416313",
    "nik": "2121",
    "first_name": "Satrio",
    "last_name": "Bagaskoro",
    "phone": "081245670987",
    "address": " Bekasi",
    "birth_place": "Probolinggo",
    "birth_day": "1998-07-15",
    "position": "Manager",
    "section": "Analis Laboratorium",
    "division": "Sales & Marketing",
    "facedata": "[-0.02403358556330204,0.0036282602231949568,-0.004161129239946604,-0.002368563087657094,-0.014876452274620533,-0.06108018755912781,-0.01802119053900242,0.059425413608551025,-0.030595242977142334,0.05616569146513939,0.006144833751022816,0.0027758392971009016,-0.013125465251505375,-0.004375455901026726,-0.002218205016106367,-0.06311166286468506,0.005418590269982815,0.009549912996590137,0.004518312402069569,-0.006907584611326456,0.01073051244020462,0.07151579111814499,-0.015805276110768318,-0.005351405590772629,-0.15605907142162323,0.02389991655945778,0.0003776821249630302,0.034232303500175476,0.10756202042102814,-0.16154277324676514,0.0113296490162611,-0.034412723034620285,0.03999245539307594,-0.006042812950909138,0.07977959513664246,-0.03979165107011795,0.17836637794971466,-0.02659226395189762,0.005951655097305775,-0.18338848650455475,-0.0006953198462724686,0.0012888457858934999,-0.008950832299888134,0.0036574287805706263,0.011711862869560719,0.0029646398033946753,-0.022752510383725166,0.09563396126031876,-0.009414024651050568,0.01765141822397709,-0.019255423918366432,0.0019450557883828878,-0.10849826782941818,0.0011686990037560463,0.010800463147461414,0.007836433127522469,0.11832533776760101,0.0007653855718672276,-0.020158981904387474,0.0016530165448784828,0.039623260498046875,0.026740148663520813,0.03141893446445465,-0.09540094435214996,0.01101697701960802,0.20571410655975342,-0.000601034436840564,-0.0360979288816452,0.001139687024988234,-0.0035934941843152046,-0.003691790159791708,-0.1413719356060028,0.2037360519170761,-0.016367914155125618,-0.14205415546894073,0.02317865379154682,-0.001811199588701129,-0.004098554607480764,0.14991013705730438,-0.1712116003036499,0.0032295333221554756,-0.04624592885375023,-0.013803535141050816,-0.02027677558362484,-0.08772127330303192,0.003141761524602771,0.00999212171882391,0.0865948423743248,0.011698988266289234,-0.03670459985733032,-0.22667443752288818,0.003481493331491947,-0.0007640659459866583,0.011013572104275227,-0.1440960317850113,-0.08136604726314545,-0.04010441154241562,0.13661649823188782,0.0020079377572983503,-0.021575039252638817,0.0017894180491566658,0.004333076532930136,0.0017602306324988604,-6.792516069253907e-5,0.008088857866823673,0.004329955670982599,0.11980412900447845,-0.000352535949787125,0.033319972455501556,-0.007039932068437338,0.17775878310203552,0.0022228036541491747,-0.005469472613185644,-0.09568691998720169,0.004825872834771872,-0.16420190036296844,-0.0013071474386379123,-0.005438197869807482,0.3509249687194824,-0.06550546735525131,0.14270193874835968,-0.011497915722429752,-0.13581056892871857,0.000460761075373739,-0.001999364234507084,0.0035284487530589104,0.0032238734420388937,0.0033642430789768696,0.012377776205539703,-0.041975054889917374,0.00545157678425312,0.0008940637926571071,-0.005048074293881655,0.028372114524245262,0.056231096386909485,-0.007099532056599855,-0.13749977946281433,-0.031046859920024872,-0.022460604086518288,0.012890162877738476,-0.004630157258361578,-0.006064740475267172,0.00039528246270492673,0.005047536455094814,-0.04816163331270218,0.050068777054548264,-0.0030359711963683367,0.003421412082388997,-0.002781160408630967,-0.00886901468038559,0.00856225285679102,0.05340589955449104,0.21798942983150482,-0.004159784875810146,0.00450035510584712,0.002501637442037463,0.000846861454192549,0.009017156437039375,0.06490053981542587,-0.0013689358020201325,-0.01874753087759018,0.01288530696183443,-0.005265859887003899,-0.005074098706245422,0.000862124259583652,0.015550508163869381,0.009047147817909718,0.096401646733284,0.004045155365020037,0.011961743235588074,-0.07843878865242004,0.010297305881977081,0.004365753382444382,0.004763389006257057,-0.019130291417241096,-0.009869473986327648,0.059312544763088226,-0.035854313522577286,-0.002689634682610631,-0.005722153000533581,-0.2157241553068161,0.03616595268249512,0.005101507529616356,0.0013332574162632227,-0.16532428562641144,0.04257436841726303,0.085258349776268,0.10094606876373291,0.03244807571172714,-0.19002708792686462,-0.017088839784264565,0.0009691558661870658]",
    "latitude": "-6.2295601",
    "longitude": "106.9973988",
    "radius": "100",
    "face_ios": false,
    "face_android": true,
    "date": "20210921152722"
  }
} 
*/

  bool? statusJson;
  String? remarks;
  String? token;
  String? urlFace;
  ReturnLoginDataUser? dataUser;

  ReturnLogin({
    this.statusJson,
    this.remarks,
    this.token,
    this.urlFace,
    this.dataUser,
  });
  ReturnLogin.fromJson(Map<String, dynamic> json) {
    statusJson = json["status_json"];
    remarks = json["remarks"]?.toString();
    token = json["token"]?.toString();
    urlFace = json["urlFace"]?.toString();
    dataUser = (json["data_user"] != null)
        ? ReturnLoginDataUser.fromJson(json["data_user"])
        : null;
  }
  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = Map<String, dynamic>();
    data["status_json"] = statusJson;
    data["remarks"] = remarks;
    data["token"] = token;
    data["urlFace"] = urlFace;
    if (dataUser != null) {
      data["data_user"] = dataUser!.toJson();
    }
    return data;
  }
}
